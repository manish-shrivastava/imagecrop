<div class="row-fluid spacer">
   <div class="span12 pagination-centered"><%= image_tag("rails.png") %></div>
</div>
<%= form_for(@pic, :html => {:multipart => true, :id => "upload_form", :remote => true, :onsubmit => "return checkForm()"} ) do |f| %>

<% for attribute in [:crop_x, :crop_y, :crop_w, :crop_h] %>
  <%= f.text_field attribute, :id => attribute, :type => "hidden" %>
<% end %>

<span class="btn btn-success btn-file">
    <i class="icon-plus"> </i><span>Upload new picture</span>
    <%= f.file_field :image, :id => "image_file", :onchange => "fileSelectHandler()" %>
</span>

<div class="error"></div>

<div id="modal" class="modal hide fade"  tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-body">
		<img id="preview" />
	</div>
	<div class="text-center"><%= f.submit "Send"%></div>
</div>
<% end %>

<hr />
<div class="row-fluid spacer">
	<div class="span8 offset2 images">
		<%= render 'images' %>
	</div>
</div>
<br />

<script>

// check for selected crop region
function checkForm() {
    if (parseInt($('#crop_w').val())) return true;
    $('.error').html('Please select a crop region and then press Upload').show();
    return false;
};

// update info by cropping (onChange and onSelect events handler)
function updateInfo(e) {
    $('#crop_x').val(e.x);
    $('#crop_y').val(e.y);
    $('#crop_w').val(e.w);
    $('#crop_h').val(e.h);
};

function updateInfo(coords) {
  var rx = 100/coords.w;
  var ry = 100/coords.h;
  var bounds = this.getBounds();

  $('#crop_x').val(Math.floor(coords.x));
  $('#crop_y').val(Math.floor(coords.y));
  $('#crop_w').val(Math.floor(coords.w));
  $('#crop_h').val(Math.floor(coords.h));  
}

// clear info by cropping (onRelease event handler)
function clearInfo() {
    $('.info #crop_w').val('');
    $('.info #crop_h').val('');
};

function fileSelectHandler() {

    // get selected file
    var oFile = $('#image_file')[0].files[0];
    // hide all errors
    $('.error').hide();

    // check for image type (jpg and png are allowed)
    var rFilter = /^(image\/jpeg|image\/png)$/i;
    if (! rFilter.test(oFile.type)) {
        $('.error').html('Please select a valid image file (jpg and png are allowed)').show();
        return;
    }

    // check for file size
    if (oFile.size > 250 * 1024) {
        $('.error').html('You have selected too big file, please select a one smaller image file').show();
        return;
    }
	$(".modal-body").html('<img id="preview" />');
    // preview element
    var oImage = document.getElementById('preview');
	
    // prepare HTML5 FileReader
    var oReader = new FileReader();
        oReader.onload = function(e) {

        // e.target.result contains the DataURL which we can use as a source of the image
        oImage.src = e.target.result;
        oImage.onload = function () { // onload event handler
		if (typeof jcrop_api != 'undefined') {
                jcrop_api.destroy();
				oImage.src = "";
			}
		$("#modal").modal('show');
		
            // initialize Jcrop
            var jcrop_api = $.Jcrop('#preview', {
                minSize: [100, 100], // min crop size
                aspectRatio : 1, // keep aspect ratio 1:1
                bgFade: true, // use fade effect
                bgOpacity: .3, // fade opacity
                onChange: updateInfo,
                onSelect: updateInfo,
                onRelease: clearInfo
            }, function(){

           });
        };
    };

    // read selected file as DataURL
    oReader.readAsDataURL(oFile);
}

</script>

